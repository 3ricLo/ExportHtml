{
    "docs": [
        {
            "location": "/", 
            "text": "ExportHtml\n\n\nConvert and view source code in HTML or BBCODE.\n\n\n\n\nOverview\n\n\nThis is a fork of \nAndrew Gibson\ns \nPrintHtml\n plugin.  This plugin allows the exporting of a document in Sublime Text to a HTML file or to BBCode.  It duplicates Sublime\ns theme colors and font styles.\n\n\n\n\nFeatures\n\n\n\n\nExport to HTML using any tmTheme for syntax highlighting.\n\n\nCan handle any language supported by ST2.\n\n\nSupports bold and italic theme font styles as well.\n\n\nConfigurable output.\n\n\nFormat suitable for copying and pasting in emails.\n\n\n2 included tmTheme files for color and grayscale printing (but any can be used).\n\n\nExport only selections (multi-select supported).\n\n\nExport and show highlights (multi-select supported).\n\n\nToggle gutter on/off in browser view.\n\n\nAutomatically open browser print dialog (optional).\n\n\nEnable/disable configurable word wrapping.\n\n\nConfigurable toolbar to appear in the generated webpage.\n\n\n\n\nCredits\n\n\n\n\nAndrew Gibson\n: Original idea and base code for converting Sublime view to HTML and allowing me to build off it to make ExportHtml.\n\n\nPrint-Color and Print-Grayscale tmThemes were derived from Monokai Bright.", 
            "title": "About ExportHtml"
        }, 
        {
            "location": "/#exporthtml", 
            "text": "Convert and view source code in HTML or BBCODE.", 
            "title": "ExportHtml"
        }, 
        {
            "location": "/#overview", 
            "text": "This is a fork of  Andrew Gibson s  PrintHtml  plugin.  This plugin allows the exporting of a document in Sublime Text to a HTML file or to BBCode.  It duplicates Sublime s theme colors and font styles.", 
            "title": "Overview"
        }, 
        {
            "location": "/#features", 
            "text": "Export to HTML using any tmTheme for syntax highlighting.  Can handle any language supported by ST2.  Supports bold and italic theme font styles as well.  Configurable output.  Format suitable for copying and pasting in emails.  2 included tmTheme files for color and grayscale printing (but any can be used).  Export only selections (multi-select supported).  Export and show highlights (multi-select supported).  Toggle gutter on/off in browser view.  Automatically open browser print dialog (optional).  Enable/disable configurable word wrapping.  Configurable toolbar to appear in the generated webpage.", 
            "title": "Features"
        }, 
        {
            "location": "/#credits", 
            "text": "Andrew Gibson : Original idea and base code for converting Sublime view to HTML and allowing me to build off it to make ExportHtml.  Print-Color and Print-Grayscale tmThemes were derived from Monokai Bright.", 
            "title": "Credits"
        }, 
        {
            "location": "/installation/", 
            "text": "Installation\n\n\nInstalling ExportHtml.\n\n\n\n\nPackage Control\n\n\nThe recommended way to install ExportHtml is via \nPackage Control\n.  Package Control will install the correct branch on your system and keep it up to date.\n\n\n\n\n\n\nEnsure Package Control is installed.  Instructions are found \nhere\n.\n\n\n\n\n\n\nIn sublime, press \nctrl\n + \nshift\n + \np\n (Win, Linux) or \ncmd\n + \nshift\n + \np\n (OSX) to bring up the quick panel.  It will show a list of installable plugins.\n\n\n\n\n\n\nStart typing \nExportHtml\n, when you see it, select it.\n\n\n\n\n\n\nRestart to be sure everything is loaded proper.\n\n\n\n\n\n\nEnjoy!\n\n\n\n\n\n\nGit Cloning\n\n\n\n\nWarning\n\n\nThis is not the recommended way to install ExportHtml for the casual user as it requires the user to know which branch to install, know how to use git, and \nwill not\n get automatically updated.\n\n\nIf you are forking for a pull request, this is the way to go, just replace the official repository with the link for your fork.\n\n\n\n\n\n\n\n\nQuit Sublime Text.\n\n\n\n\n\n\nOpen a terminal:\n\n\ncd /path/to/Sublime Text 3/Packages\ngit clone https://github.com/facelessuser/ExportHtml.git ExportHtml\n\n\n\n\n\n\n\n\n\n3 Restart Sublime Text.", 
            "title": "Installation"
        }, 
        {
            "location": "/installation/#installation", 
            "text": "Installing ExportHtml.", 
            "title": "Installation"
        }, 
        {
            "location": "/installation/#package-control", 
            "text": "The recommended way to install ExportHtml is via  Package Control .  Package Control will install the correct branch on your system and keep it up to date.    Ensure Package Control is installed.  Instructions are found  here .    In sublime, press  ctrl  +  shift  +  p  (Win, Linux) or  cmd  +  shift  +  p  (OSX) to bring up the quick panel.  It will show a list of installable plugins.    Start typing  ExportHtml , when you see it, select it.    Restart to be sure everything is loaded proper.    Enjoy!", 
            "title": "Package Control"
        }, 
        {
            "location": "/installation/#git-cloning", 
            "text": "Warning  This is not the recommended way to install ExportHtml for the casual user as it requires the user to know which branch to install, know how to use git, and  will not  get automatically updated.  If you are forking for a pull request, this is the way to go, just replace the official repository with the link for your fork.     Quit Sublime Text.    Open a terminal:  cd /path/to/Sublime Text 3/Packages\ngit clone https://github.com/facelessuser/ExportHtml.git ExportHtml    3 Restart Sublime Text.", 
            "title": "Git Cloning"
        }, 
        {
            "location": "/usage/", 
            "text": "User Guide\n\n\nConfiguring and using ExportHtml\n\n\n\n\nExporting HTML\n\n\nExportHtml comes with a number of default commands available, but these can be overridden in the settings file.  Or you can create commands directly outside of the settings file bound to the command palette, key bindings, or even the menu.\n\n\nIf adding a command to the settings file, it goes under the \nhtml_panel\n setting.  These configurations will appear under the \nExport to HTML: Show Export Menu\n command palette command.\n\n\n// Define configurations for the drop down export menu\n\n\nhtml_panel\n:\n \n[\n\n    \n// Browser print color (selections and multi-selections allowed)\n\n    \n{\n\n        \nBrowser Print - Color\n:\n \n{\n\n            \nnumbers\n:\n \ntrue\n,\n\n            \nwrap\n:\n \n900\n,\n\n            \nbrowser_print\n:\n \ntrue\n,\n\n            \nmulti_select\n:\n \ntrue\n,\n\n            \ncolor_scheme\n:\n \nPackages/ExportHtml/ColorSchemes/Print-Color.tmTheme\n,\n\n            \nstyle_gutter\n:\n \nfalse\n\n        \n}\n\n    \n}\n\n \n]\n\n\n\n\n\n\nThe name of the command is the key value, and then you add the parameters you wish to specify.  You can use any combination of settings below.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nnumbers\n\n\nboolean\n\n\nDisplay line numbers in the gutter.\n\n\n\n\n\n\nstyle_gutter\n\n\nboolean\n\n\nStyle gutter with theme backgrounds and foregrounds, or just use the default background/foreground.  Default is \ntrue\n.\n\n\n\n\n\n\nmulti_select\n\n\nboolean\n\n\nIf multiple regions are selected in a document, only export what is under those selections. By default only the first selection is recognized.  Default is \nfalse\n.\n\n\n\n\n\n\nhighlight_selections\n\n\nboolean\n\n\nHighlights all selections in HTML output using the themes selection colors.  Multi-select option will be ignored if this is set \ntrue\n.  Default is \nfalse\n.\n\n\n\n\n\n\nignore_selections\n\n\nboolean\n\n\nIgnores selections in the view.  If this is set, \nmulti_select\n and \nhighlight_selections\n will be treated as \nfalse\n regardless of their actual value.\n\n\n\n\n\n\nwrap\n\n\ninteger\n\n\nDefine the allowable size in px to wrap lines at.  By default wrapping is not used.\n\n\n\n\n\n\ncolor_scheme\n\n\nstring\n\n\nThe color scheme (tmTheme) file you would like to use.  By default the current color scheme file is used, or the the alternate default color scheme if defined in the setting \nalternate_scheme\n.\n\n\n\n\n\n\nclipboard_copy\n\n\nboolean\n\n\nCopy html to the clipboard after generation. Default is \nfalse\n.\n\n\n\n\n\n\nbrowser_print\n\n\nboolean\n\n\nWhen opening in the web browser, also open the browser\ns print dialog. This will be ignored if \nview_open\n is \ntrue\n.  Default is \nfalse\n.\n\n\n\n\n\n\nview_open\n\n\nboolean\n\n\nOpen HTML in a Sublime Text tab instead of the web browser.  Default is \nfalse\n.\n\n\n\n\n\n\nno_header\n\n\nboolean\n\n\nDo not display file name, date, and time at the top of the HTML document. Default is \nfalse\n.\n\n\n\n\n\n\ndate_time_format\n\n\nstring\n\n\nString denoting the format for date and time when displaying header.  Please see Python\ns documentation on \ntime.strftime\n for detailed info on formatting syntax.  Default is \n%m/%d/%y %I:%M:%S\n.\n\n\n\n\n\n\nshow_full_path\n\n\nboolean\n\n\nShow full path for filename when displaying header. Default is \ntrue\n.\n\n\n\n\n\n\nsave_location\n\n\nstring\n\n\nPath to save html file.  If the file is wanted in the same file as the original, use \n.\n.  Otherwise, use the absolute path to where the file is desired.  If there is an issue determining where to save the file, or the path does not exist, the OS temp folder will be used. Default is \nNone\n (use temp folder).\n\n\n\n\n\n\ntime_stamp\n\n\nstring\n\n\nConfigure the time stamp of saved html when using \nsave_location\n.  To remove time stamps, just set to an empty string \n.  Please see Python\ns documentation on \ntime.strftime\n for detailed info on formatting syntax.  Default is \n_%m%d%y%H%M%S\n.\n\n\n\n\n\n\ntoolbar\n\n\narray of strings\n\n\nOption to display a toolbar with to access features in a generated HTML.  This setting is an array of keywords that represent the icons in the toolbar to show.  Valid keywords include \ngutter\n, \nprint\n, \nplain_text\n, \nannotation\n, \ntheme\n, and \nwrapping\n.  Toolbar will appear when you mouse over the upper right corner of the window of the generated html.  Default enables all.\n\n\n\n\n\n\nfilter\n\n\nstring\n\n\nFilters to use on the theme\ns colors.  The string is a sequence of filters separated by \n;\n.  The accepted filters are \ngrayscale\n, \ninvert\n, \nsepia\n, \nbrightness\n, \nglow\n, \nsaturation\n, \nhue\n, and \ncolorize\n.  \nbrightness\n and \nsaturation\n requires a float parameter to specify to what magnitude the filter should be applied at.  \nglow\n requires a float for intensity (usually something like .1 or .2 is sufficient).  \nhue\n and \ncolorize\n take a float that represents a degree.  \nhue\n shifts the hue via the degree given (can accept negative degrees); hues will wrap if they extend past 0 degrees or 360 degrees.  Example: \nfilter\n: \nsepia;invert;brightness(1.1);saturation(1.3);\n.  Default is \n.\n\n\n\n\n\n\nshift_brightness\n\n\nbool\n\n\nThis setting shifts the entire theme\ns brightness if a background color\ns luminance is below the global setting \nbg_min_lumen_threshold\n.  This was added to solve an issue that I had when copying dark themes into an outlook email; if a html span had a background that was too dark, the foreground would just be white.  This allows me to not have to worry about how dark the theme is, and probably serves very little use besides that.\n\n\n\n\n\n\n\n\nIf you wish to bind a command to a key combination etc., the same settings as above can be used.\n\n\nExample:\n\n\n{\n\n    \nkeys\n:\n \n[\nctrl+alt+n\n],\n\n    \ncommand\n:\n \nexport_html\n,\n\n    \nargs\n:\n \n{\n\n        \nnumbers\n:\n \ntrue\n,\n\n        \nwrap\n:\n \n900\n,\n\n        \nbrowser_print\n:\n \ntrue\n,\n\n        \nmulti_select\n:\n \ntrue\n,\n\n        \ncolor_scheme\n:\n \nPackages/ExportHtml/ColorSchemes/Print-Color.tmTheme\n,\n\n        \nstyle_gutter\n:\n \nfalse\n\n    \n}\n\n\n}\n\n\n\n\n\n\nWhen viewing the HTML in your web browser, regardless of the gutter settings, the gutter can be toggled to show or be hidden using the toolbar.\n\n\nExporting BBCode\n\n\nExportHtml can also export selected code as BBCode for posting in forums. Exporting BBCode is very similar to exporting HTML code.\n\n\nIf adding a command to the settings file, it goes under the \nbbcode_panel\n setting.  These configurations will appear under the \nExport to BBCode: Show Export Menu\n command palette command.\n\n\n// Define configurations for the drop down export menu\n\n\nbbcode_panel\n:\n \n[\n\n    \n{\n\n        \nTo Clipboard - Format as BBCode\n:\n \n{\n\n            \nnumbers\n:\n \nfalse\n,\n\n            \nmulti_select\n:\n \ntrue\n\n        \n}\n\n    \n}\n\n\n]\n\n\n\n\n\n\nThe name of the command is the key value, and then you add the parameters you wish to specify.  You can use any combination of settings below.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nnumbers\n\n\nboolean\n\n\nDisplay line numbers in the gutter.\n\n\n\n\n\n\nmulti_select\n\n\nboolean\n\n\nIf multiple regions are selected in a document, only export what is under those selections. By default only the first selection is recognized.  Default is \nfalse\n.\n\n\n\n\n\n\nignore_selections\n\n\nboolean\n\n\nIgnores selections in the view.  If this is set, \nmulti_select\n will be treated as \nfalse\n regardless of its actual value.\n\n\n\n\n\n\ncolor_scheme\n\n\nstring\n\n\nThe color scheme (tmTheme) file you would like to use.  By default the current color scheme file is used, or the the alternate default color scheme if defined in the setting \nalternate_scheme\n.\n\n\n\n\n\n\nclipboard_copy\n\n\nboolean\n\n\nCopy BBCode to the clipboard after generation. Default is \ntrue\n.\n\n\n\n\n\n\nview_open\n\n\nboolean\n\n\nOpen txt file of BBCode in a Sublime Text tab.  Default is \nfalse\n.\n\n\n\n\n\n\nno_header\n\n\nboolean\n\n\nDo not display file name, date, and time at the top of the HTML document. Default is \nfalse\n.\n\n\n\n\n\n\n\n\nIf you wish to bind a command to a key combination etc., the same settings as above can be used.\n\n\nExample:\n\n\n{\n\n    \nkeys\n:\n \n[\nctrl+alt+n\n],\n\n    \ncommand\n:\n \nexport_bbcode\n,\n\n    \nargs\n:\n \n{\n\n        \nnumbers\n:\n \nfalse\n,\n\n        \nmulti_select\n:\n \ntrue\n\n    \n}\n\n\n}\n\n\n\n\n\n\nAnnotations (HTML only)\n\n\nAnnotations are comments you can make on selected text.  When the HTML is generated, the selected text will be underlined, and when the mouse hovers over them, a tooltip will appear with your comment.\n\n\n\n\nIn order to use annotations, you must enter into an \nAnnotation Mode\n.  This puts your file in a read only state.  At this point, you can select text and create annotations using the annotation commands provided.  When you leave the \nAnnotation Mode\n, all annotations will be lost.  So you must print before leaving annotation mode.\n\n\nYou can access the annotation commands from the command palette or from the context menu.\n\n\nThe commands are as follows:\n\n\n\n\n\n\n\n\nCommand\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nEnable Annotation Mode\n\n\nTurn annotation mode on.\n\n\n\n\n\n\nDisable Annotation Mode\n\n\nTurn annotation mode off.\n\n\n\n\n\n\nAnnotate Selection\n\n\nAnnotate the given selection (no multi-select support currently).\n\n\n\n\n\n\nDelete Annotation(s)\n\n\nDelete the annotation region the the cursor resides in (multi-select support).\n\n\n\n\n\n\nDelete All Annotations\n\n\nDelete all annotation regions.\n\n\n\n\n\n\nShow Annotation Comment\n\n\nShow the annotation comment of the region under the cursor.\n\n\n\n\n\n\n\n\nYou can navigate the annotations in the generate HTML by using a jump table.  You can show the jump table at any time by selecting the annotation button in the toolbar.  You can also click any annotation to show the jump table as well.  If it gets in the way, you can dock it in a different location.\n\n\n\n\nSettings File options\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nalternate_scheme\n\n\nstring or false\n\n\nDefines a default theme to be used if a theme is not specified in a command.  When this is false, the current Sublime Text theme in use is used.\n\n\n\n\n\n\nalternate_font_size\n\n\nint or false\n\n\nDefine an alternate font_size to use by default instead of the current one in use.  Use the current one in use if set to a literal \nfalse\n.  Default is \nfalse\n.\n\n\n\n\n\n\nalternate_font_face\n\n\nstring or false\n\n\nDefine an alternate font_face to use by default instead of the current one in use.  Use the current one in use if set to a literal \nfalse\n.  Default is \nfalse\n.\n\n\n\n\n\n\nvalid_selection_size\n\n\ninteger\n\n\nMinimum allowable size for a selection to be accepted for only the selection to be printed.\n\n\n\n\n\n\nhtml_panel\n\n\narray of commands\n\n\nDefine export configurations to appear under the \nExport to HTML: Show Export Menu\n command palette command.\n\n\n\n\n\n\nbbcode_panel\n\n\narray of commands\n\n\nDefine export configurations to appear under the \nExport to BBCode: Show Export Menu\n command palette command.", 
            "title": "User Guide"
        }, 
        {
            "location": "/usage/#user-guide", 
            "text": "Configuring and using ExportHtml", 
            "title": "User Guide"
        }, 
        {
            "location": "/usage/#exporting-html", 
            "text": "ExportHtml comes with a number of default commands available, but these can be overridden in the settings file.  Or you can create commands directly outside of the settings file bound to the command palette, key bindings, or even the menu.  If adding a command to the settings file, it goes under the  html_panel  setting.  These configurations will appear under the  Export to HTML: Show Export Menu  command palette command.  // Define configurations for the drop down export menu  html_panel :   [ \n     // Browser print color (selections and multi-selections allowed) \n     { \n         Browser Print - Color :   { \n             numbers :   true , \n             wrap :   900 , \n             browser_print :   true , \n             multi_select :   true , \n             color_scheme :   Packages/ExportHtml/ColorSchemes/Print-Color.tmTheme , \n             style_gutter :   false \n         } \n     } \n  ]   The name of the command is the key value, and then you add the parameters you wish to specify.  You can use any combination of settings below.     Parameter  Type  Description      numbers  boolean  Display line numbers in the gutter.    style_gutter  boolean  Style gutter with theme backgrounds and foregrounds, or just use the default background/foreground.  Default is  true .    multi_select  boolean  If multiple regions are selected in a document, only export what is under those selections. By default only the first selection is recognized.  Default is  false .    highlight_selections  boolean  Highlights all selections in HTML output using the themes selection colors.  Multi-select option will be ignored if this is set  true .  Default is  false .    ignore_selections  boolean  Ignores selections in the view.  If this is set,  multi_select  and  highlight_selections  will be treated as  false  regardless of their actual value.    wrap  integer  Define the allowable size in px to wrap lines at.  By default wrapping is not used.    color_scheme  string  The color scheme (tmTheme) file you would like to use.  By default the current color scheme file is used, or the the alternate default color scheme if defined in the setting  alternate_scheme .    clipboard_copy  boolean  Copy html to the clipboard after generation. Default is  false .    browser_print  boolean  When opening in the web browser, also open the browser s print dialog. This will be ignored if  view_open  is  true .  Default is  false .    view_open  boolean  Open HTML in a Sublime Text tab instead of the web browser.  Default is  false .    no_header  boolean  Do not display file name, date, and time at the top of the HTML document. Default is  false .    date_time_format  string  String denoting the format for date and time when displaying header.  Please see Python s documentation on  time.strftime  for detailed info on formatting syntax.  Default is  %m/%d/%y %I:%M:%S .    show_full_path  boolean  Show full path for filename when displaying header. Default is  true .    save_location  string  Path to save html file.  If the file is wanted in the same file as the original, use  . .  Otherwise, use the absolute path to where the file is desired.  If there is an issue determining where to save the file, or the path does not exist, the OS temp folder will be used. Default is  None  (use temp folder).    time_stamp  string  Configure the time stamp of saved html when using  save_location .  To remove time stamps, just set to an empty string  .  Please see Python s documentation on  time.strftime  for detailed info on formatting syntax.  Default is  _%m%d%y%H%M%S .    toolbar  array of strings  Option to display a toolbar with to access features in a generated HTML.  This setting is an array of keywords that represent the icons in the toolbar to show.  Valid keywords include  gutter ,  print ,  plain_text ,  annotation ,  theme , and  wrapping .  Toolbar will appear when you mouse over the upper right corner of the window of the generated html.  Default enables all.    filter  string  Filters to use on the theme s colors.  The string is a sequence of filters separated by  ; .  The accepted filters are  grayscale ,  invert ,  sepia ,  brightness ,  glow ,  saturation ,  hue , and  colorize .   brightness  and  saturation  requires a float parameter to specify to what magnitude the filter should be applied at.   glow  requires a float for intensity (usually something like .1 or .2 is sufficient).   hue  and  colorize  take a float that represents a degree.   hue  shifts the hue via the degree given (can accept negative degrees); hues will wrap if they extend past 0 degrees or 360 degrees.  Example:  filter :  sepia;invert;brightness(1.1);saturation(1.3); .  Default is  .    shift_brightness  bool  This setting shifts the entire theme s brightness if a background color s luminance is below the global setting  bg_min_lumen_threshold .  This was added to solve an issue that I had when copying dark themes into an outlook email; if a html span had a background that was too dark, the foreground would just be white.  This allows me to not have to worry about how dark the theme is, and probably serves very little use besides that.     If you wish to bind a command to a key combination etc., the same settings as above can be used.  Example:  { \n     keys :   [ ctrl+alt+n ], \n     command :   export_html , \n     args :   { \n         numbers :   true , \n         wrap :   900 , \n         browser_print :   true , \n         multi_select :   true , \n         color_scheme :   Packages/ExportHtml/ColorSchemes/Print-Color.tmTheme , \n         style_gutter :   false \n     }  }   When viewing the HTML in your web browser, regardless of the gutter settings, the gutter can be toggled to show or be hidden using the toolbar.", 
            "title": "Exporting HTML"
        }, 
        {
            "location": "/usage/#exporting-bbcode", 
            "text": "ExportHtml can also export selected code as BBCode for posting in forums. Exporting BBCode is very similar to exporting HTML code.  If adding a command to the settings file, it goes under the  bbcode_panel  setting.  These configurations will appear under the  Export to BBCode: Show Export Menu  command palette command.  // Define configurations for the drop down export menu  bbcode_panel :   [ \n     { \n         To Clipboard - Format as BBCode :   { \n             numbers :   false , \n             multi_select :   true \n         } \n     }  ]   The name of the command is the key value, and then you add the parameters you wish to specify.  You can use any combination of settings below.     Parameter  Type  Description      numbers  boolean  Display line numbers in the gutter.    multi_select  boolean  If multiple regions are selected in a document, only export what is under those selections. By default only the first selection is recognized.  Default is  false .    ignore_selections  boolean  Ignores selections in the view.  If this is set,  multi_select  will be treated as  false  regardless of its actual value.    color_scheme  string  The color scheme (tmTheme) file you would like to use.  By default the current color scheme file is used, or the the alternate default color scheme if defined in the setting  alternate_scheme .    clipboard_copy  boolean  Copy BBCode to the clipboard after generation. Default is  true .    view_open  boolean  Open txt file of BBCode in a Sublime Text tab.  Default is  false .    no_header  boolean  Do not display file name, date, and time at the top of the HTML document. Default is  false .     If you wish to bind a command to a key combination etc., the same settings as above can be used.  Example:  { \n     keys :   [ ctrl+alt+n ], \n     command :   export_bbcode , \n     args :   { \n         numbers :   false , \n         multi_select :   true \n     }  }", 
            "title": "Exporting BBCode"
        }, 
        {
            "location": "/usage/#annotations-html-only", 
            "text": "Annotations are comments you can make on selected text.  When the HTML is generated, the selected text will be underlined, and when the mouse hovers over them, a tooltip will appear with your comment.   In order to use annotations, you must enter into an  Annotation Mode .  This puts your file in a read only state.  At this point, you can select text and create annotations using the annotation commands provided.  When you leave the  Annotation Mode , all annotations will be lost.  So you must print before leaving annotation mode.  You can access the annotation commands from the command palette or from the context menu.  The commands are as follows:     Command  Description      Enable Annotation Mode  Turn annotation mode on.    Disable Annotation Mode  Turn annotation mode off.    Annotate Selection  Annotate the given selection (no multi-select support currently).    Delete Annotation(s)  Delete the annotation region the the cursor resides in (multi-select support).    Delete All Annotations  Delete all annotation regions.    Show Annotation Comment  Show the annotation comment of the region under the cursor.     You can navigate the annotations in the generate HTML by using a jump table.  You can show the jump table at any time by selecting the annotation button in the toolbar.  You can also click any annotation to show the jump table as well.  If it gets in the way, you can dock it in a different location.", 
            "title": "Annotations (HTML only)"
        }, 
        {
            "location": "/usage/#settings-file-options", 
            "text": "Parameter  Type  Description      alternate_scheme  string or false  Defines a default theme to be used if a theme is not specified in a command.  When this is false, the current Sublime Text theme in use is used.    alternate_font_size  int or false  Define an alternate font_size to use by default instead of the current one in use.  Use the current one in use if set to a literal  false .  Default is  false .    alternate_font_face  string or false  Define an alternate font_face to use by default instead of the current one in use.  Use the current one in use if set to a literal  false .  Default is  false .    valid_selection_size  integer  Minimum allowable size for a selection to be accepted for only the selection to be printed.    html_panel  array of commands  Define export configurations to appear under the  Export to HTML: Show Export Menu  command palette command.    bbcode_panel  array of commands  Define export configurations to appear under the  Export to BBCode: Show Export Menu  command palette command.", 
            "title": "Settings File options"
        }, 
        {
            "location": "/contributing/", 
            "text": "Contributing \n Support\n\n\nSteps for contributing and getting support.\n\n\n\n\nOverview\n\n\n\n\n\n\n\n\nSublime Versions\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nST2\n=\nversion\nST3\n\n\nSupported on a separate branch, but not actively.  Any further fixes or enhancements must come from the community.  Issues for versions less than \nST3\n will not be addressed moving forward by me.  Pull requests are welcome for back-porting features, enhancements, or fixes to the old branch, but the content of the pull \nmust\n already exist on the main, actively developed branch.  I will not allow an older branch to exceed the main branch in regards to functionality.\n\n\n\n\n\n\nST3\n\n\nFully supported and actively maintained.\n\n\n\n\n\n\n\n\nContribution from the community is encouraged and can be done in a variety of ways:\n\n\n\n\nBug reports.\n\n\nReviewing code.\n\n\nCode patches via pull requests.\n\n\nDocumentation improvements via pull requests.\n\n\n\n\nBug Reports\n\n\n\n\n\n\nPlease \nread the documentation\n and \nsearch the issue tracker\n to try to find the answer to your question \nbefore\n posting an issue.\n\n\n\n\n\n\nWhen creating an issue on the repository, please provide as much info as possible:\n\n\n\n\nSublime Text build.\n\n\nOperating system.\n\n\nErrors in console.\n\n\nDetailed description of the problem.\n\n\nExamples for reproducing the error.  You can post pictures, but if specific text or code is required to reproduce the issue, please provide the text in a plain text format for easy copy/paste.\n\n\n\n\nThe more info provided the greater the chance someone will take the time to answer, implement, or fix the issue.\n\n\n\n\n\n\nBe prepared to answer questions and provide additional information if required.  Issues in which the creator refuses to respond to follow up questions will be marked as stale and closed.\n\n\n\n\n\n\nReviewing Code\n\n\nTake part in reviewing pull requests and/or reviewing direct commits.  Make suggestions to improve the code and discuss solutions to overcome weakness in the algorithm.\n\n\nPull Requests\n\n\nPull requests are welcome, and if you plan on contributing directly to the code, there are a couple of things to be mindful of.\n\n\nContinuous integration tests on are run on all pull requests and commits via Travis CI.  When making a pull request, the tests will automatically be run, and the request must pass to be accepted.  You can (and should) run these tests before pull requesting.  If it is not possible to run these tests locally, they will be run when the pull request is made, but it is strongly suggested that requesters make an effort to verify before requesting to allow for a quick, smooth merge.\n\n\nFeel free to use a virtual environment if you are concerned about installing any of the Python packages.  In the future, I may use tox, but as I currently only test on Python 3.3, I wanted to keep things simple.\n\n\nRunning Validation Tests\n\n\n\n\nTip\n\n\nIf you are running Sublime on a OSX or Linux/Unix system, you run all tests by by running the shell script (assuming you have installed your environment fulfills all requirements below):\n\n\nchmod +x run_tests.sh\n./run_tests.sh\n\n\n\n\n\n\n\nThere are a couple of dependencies that must be present before running the tests.\n\n\n\n\n\n\nAs \nST3\n is the only current actively supported version, Python 3.3 must be used to validate the tests.\n\n\n\n\n\n\nUnit tests are run with \nnose\n.  You can install nose via:\n\n\npip install nose\n\n\n\n\n\nThe tests should be run from the root folder of the plugin by using the following command:\n\n\nnosetests .\n\n\n\n\n\n\n\n\n\nLinting is performed on the entire project with \nflake8\n and \nflake8_docstrings\n.  These can be installed via:\n\n\npip install flake8\npip install flake8_docstrings\n\n\n\n\n\nLinting is performed with the following command:\n\n\nflake8 .\n\n\n\n\n\n\n\n\n\nJavaScript files are linted with the \njshint\n module for \nnodejs\n.\n\n\n\n\nnodejs can be downloaded and installed from \nhttps://nodejs.org\n.\n\n\n\n\njshint can be installed with node\ns package manager called \nnpm\n. This example will illustrate how to install and use jshint globally.  If you don\nt want to do it globally and know how to do it locally, feel free to that as well.\n\n\nInstall.\n\n\nnpm install -g jshint\n\n\n\n\n\nLinting is performed with the following command:\n\n\njshint .\n\n\n\n\n\n\n\n\n\n\n\n\n\nDocumentation Improvements\n\n\nA ton of time has been not only creating and supporting this plugin, but also spent making this documentation.  If you feel it is still lacking, show your appreciation for the plugin by helping to improve the documentation.  Help with documentation is always appreciated and can be done via pull requests.  There shouldn\nt be any need to run validation tests if only updating documentation.\n\n\nI currently use a combination of using [mkdocs][mkdocs.org] with my own custom Python Markdown \nextensions\n to render the docs.  You can preview the docs if you install these two packages.  The command for previewing the docs is \nmkdocs serve\n.", 
            "title": "Contributing & Support"
        }, 
        {
            "location": "/contributing/#contributing-support", 
            "text": "Steps for contributing and getting support.", 
            "title": "Contributing  Support"
        }, 
        {
            "location": "/contributing/#overview", 
            "text": "Sublime Versions  Description      ST2 = version ST3  Supported on a separate branch, but not actively.  Any further fixes or enhancements must come from the community.  Issues for versions less than  ST3  will not be addressed moving forward by me.  Pull requests are welcome for back-porting features, enhancements, or fixes to the old branch, but the content of the pull  must  already exist on the main, actively developed branch.  I will not allow an older branch to exceed the main branch in regards to functionality.    ST3  Fully supported and actively maintained.     Contribution from the community is encouraged and can be done in a variety of ways:   Bug reports.  Reviewing code.  Code patches via pull requests.  Documentation improvements via pull requests.", 
            "title": "Overview"
        }, 
        {
            "location": "/contributing/#bug-reports", 
            "text": "Please  read the documentation  and  search the issue tracker  to try to find the answer to your question  before  posting an issue.    When creating an issue on the repository, please provide as much info as possible:   Sublime Text build.  Operating system.  Errors in console.  Detailed description of the problem.  Examples for reproducing the error.  You can post pictures, but if specific text or code is required to reproduce the issue, please provide the text in a plain text format for easy copy/paste.   The more info provided the greater the chance someone will take the time to answer, implement, or fix the issue.    Be prepared to answer questions and provide additional information if required.  Issues in which the creator refuses to respond to follow up questions will be marked as stale and closed.", 
            "title": "Bug Reports"
        }, 
        {
            "location": "/contributing/#reviewing-code", 
            "text": "Take part in reviewing pull requests and/or reviewing direct commits.  Make suggestions to improve the code and discuss solutions to overcome weakness in the algorithm.", 
            "title": "Reviewing Code"
        }, 
        {
            "location": "/contributing/#pull-requests", 
            "text": "Pull requests are welcome, and if you plan on contributing directly to the code, there are a couple of things to be mindful of.  Continuous integration tests on are run on all pull requests and commits via Travis CI.  When making a pull request, the tests will automatically be run, and the request must pass to be accepted.  You can (and should) run these tests before pull requesting.  If it is not possible to run these tests locally, they will be run when the pull request is made, but it is strongly suggested that requesters make an effort to verify before requesting to allow for a quick, smooth merge.  Feel free to use a virtual environment if you are concerned about installing any of the Python packages.  In the future, I may use tox, but as I currently only test on Python 3.3, I wanted to keep things simple.", 
            "title": "Pull Requests"
        }, 
        {
            "location": "/contributing/#running-validation-tests", 
            "text": "Tip  If you are running Sublime on a OSX or Linux/Unix system, you run all tests by by running the shell script (assuming you have installed your environment fulfills all requirements below):  chmod +x run_tests.sh\n./run_tests.sh   There are a couple of dependencies that must be present before running the tests.    As  ST3  is the only current actively supported version, Python 3.3 must be used to validate the tests.    Unit tests are run with  nose .  You can install nose via:  pip install nose  The tests should be run from the root folder of the plugin by using the following command:  nosetests .    Linting is performed on the entire project with  flake8  and  flake8_docstrings .  These can be installed via:  pip install flake8\npip install flake8_docstrings  Linting is performed with the following command:  flake8 .    JavaScript files are linted with the  jshint  module for  nodejs .   nodejs can be downloaded and installed from  https://nodejs.org .   jshint can be installed with node s package manager called  npm . This example will illustrate how to install and use jshint globally.  If you don t want to do it globally and know how to do it locally, feel free to that as well.  Install.  npm install -g jshint  Linting is performed with the following command:  jshint .", 
            "title": "Running Validation Tests"
        }, 
        {
            "location": "/contributing/#documentation-improvements", 
            "text": "A ton of time has been not only creating and supporting this plugin, but also spent making this documentation.  If you feel it is still lacking, show your appreciation for the plugin by helping to improve the documentation.  Help with documentation is always appreciated and can be done via pull requests.  There shouldn t be any need to run validation tests if only updating documentation.  I currently use a combination of using [mkdocs][mkdocs.org] with my own custom Python Markdown  extensions  to render the docs.  You can preview the docs if you install these two packages.  The command for previewing the docs is  mkdocs serve .", 
            "title": "Documentation Improvements"
        }, 
        {
            "location": "/license/", 
            "text": "License\n\n\n\n\nExportHtml is released under the MIT license.\n\n\nCopyright \n 2012 - 2015 Isaac Muse \n\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \nSoftware\n), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n\nTHE SOFTWARE IS PROVIDED \nAS IS\n, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n\nThis applies to files containing original source from PrintHtml.\n\n\nLicensed under MIT.\n\n\nCopyright (C) 2012  Andrew Gibson \n\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \nSoftware\n), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n\nTHE SOFTWARE IS PROVIDED \nAS IS\n, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.", 
            "title": "License"
        }, 
        {
            "location": "/license/#license", 
            "text": "ExportHtml is released under the MIT license.  Copyright   2012 - 2015 Isaac Muse   Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the  Software ), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED  AS IS , WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.   This applies to files containing original source from PrintHtml.  Licensed under MIT.  Copyright (C) 2012  Andrew Gibson   Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the  Software ), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED  AS IS , WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.", 
            "title": "License"
        }
    ]
}